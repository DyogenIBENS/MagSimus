#!/bin/bash
# -*- coding: utf-8 -*-

function usage()
{
	echo "
	usage: $0 [options] PathToGenesST PathToAncGenes speciescCombi PathToResults
	
	Script that computes species1_vs_Species2.sbs specific for genesST.%s.list.bz2.  
	OPTIONS:
	-h  Show this message
	-g  gapMax (-1, by default, means no fusion. But you can put an integer x>=0 to concatenate diags separated by less than x genes)
	-d	distance Metric (either CD, MD, DPD or ED)
	" >&2
}

phylDiag="/kingdoms/dyogen/workspace4/workspace4/jlucas/Libs/PhylDiag/src/phylDiag.py"

# default value
gapMax=-1
DM="CD"

while getopts ":hg:d:" OPTION
# the ":" at the beginning activates the detection of options that need arguments
# the ":" after "f" signals that "f" needs arguments
do
	case $OPTION in
		\:) echo "Option $OPTARG requires an argument." >&2
			  exit
			  ;;
    \?) echo "Error, wrong usage of options" >&2
	    	exit
		    ;;
    h)  usage
	   	  exit
		    ;;
    g) gapMax="$OPTARG"
	     ;;
    d) DM="$OPTARG"
	  	 ;;
  esac
done

#printf "Remaining arguments are: %s\n" "$*"
shift $(($OPTIND -1))

if [ $# -ne 4 ]; then
	echo "Wrong number of arguments" >&2
	exit
fi

if [ ! -d $1 ] || [ ! -d $2 ] || [ ! -e $3 ] || [ ! -d $4 ]
then
	if [ ! -d $1 ]; then
		echo "ERROR : there is no folder $1 " >&2
	fi
	if [ ! -d $2 ]; then
		echo "ERROR : there is no folder $2 " >&2
	fi
	if [ ! -e $3 ]; then
		echo "ERROR : there is no file $3 " >&2
	fi
	if [ ! -d $4 ]; then
		echo "ERROR : there is no folder $4 " >&2
	fi
fi

PathToGenesST=$1 #/workspace2/alouis/GENOMICUS_SVN/data65/genes
PathToAncGenes=$2 #/workspace2/alouis/GENOMICUS_SVN/data65/trees/0.30/ancGenes/all
speciesCombi=$3 #Tmp/species_combi.txt
PathToResults=$4 #Analyse/Diags/Real_vs_Real/Data65

mkdir -p $PathToResults

while IFS='	' read -r S1 S2 LCA
do
	echo "#!/bin/bash" > "${PathToResults}/computeSbs_Real_${S1}_${S2}.sh"
	echo "echo \"Extract synteny blocks of ${S1} vs ${S2}\"" >> "${PathToResults}/computeSbs_Real_${S1}_${S2}.sh"
	echo "python2.7 ${phylDiag} ${PathToGenesST}/genesST.${S1}.list.bz2 ${PathToGenesST}/genesST.${S2}.list.bz2 ${PathToAncGenes}/ancGenes.${LCA}.list.bz2 -filterType=InCommonAncestor -minChromLength=2 -gapMax=${gapMax} -distanceMetric=${DM} +verbose -multiProcess > ${PathToResults}/Real_${S1}_vs_${S2}.sbs 2> ${PathToResults}/Real_${S1}_vs_${S2}.sbs.log" >> "${PathToResults}/computeSbs_Real_${S1}_${S2}.sh"

done < ${speciesCombi}
IFS=$' \t\n'

chmod +x $PathToResults/computeSbs_Real_*

# Use the cluster of the IBENS via "condor" to launch these scripts in parallel
while IFS='	' read -r S1 S2 LCA
do
	condor-submit.sh ${PathToResults}/computeSbs_Real_${S1}_${S2}.sh / ${PathToResults}/computeSbs_Real_${S1}_${S2}.logStd // ${PathToResults}/computeSbs_Real_${S1}_${S2}.logErr  /// ${PathToResults}/computeSbs_Real_${S1}_${S2}.logCondor =
done < ${speciesCombi}| $(pwd)/Libs/Scripts/condor-clean.py > ${PathToResults}/COND_extractRealSbs
condor_submit ${PathToResults}/COND_extractRealSbs

#Others ways to read speciesCombi file
#1
#for line in $(cat ${speciesCombi})
#do
#	echo "$ line"
#done
#2
#nawk -v PathToGenesSTCH=$PathToGenesSTCH -v PathToAncGenes=$PathToAncGenes -v speciesCombi=$speciesCombi -v PathToResults=$PathToResults 'NF>0{print "echo -e Compute diags "$1" vs "$2"","\n", "misc.conservedBlocks_correctionDiags.py "PathToGenesSTCH"/genesSTCH."$1".list.bz2 "PathToGenesSTCH"/genesSTCH."$2".list.bz2 "PathToAncGenes"/ancGenes."$3".list.bz2 -orthosFilter=InCommonAncestor -minimalLength=1 -fusionThreshold=2 > "PathToResults"/"$1"_vs_"$2"_sglt.diags 2> "PathToResults"/"$1"_vs_"$2"_sglt.log"}' $speciesCombi > $PathToResults/compute_diags_sglt.sh
#declare -a arr
#while read -r line; do
#	    arr=(${line//,/ })
#			    printf "Rank\t: %s\nName\t: %s\nSchool\t: %s\nMajor\t: %s\nYear\t: %s\n" ${arr[@]}
#done < file.csv

#$PathToResults/compute_diags_sglt.sh
#graph_simures_Real.py $PathToResults $speciesCombi > $PathToResults/allres_N50_sglt.xmgr
